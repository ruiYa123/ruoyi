<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.ModelMapper">
    
    <resultMap type="Model" id="ModelResult">
        <result property="id"    column="id"    />
        <result property="modelName"    column="model_name"    />
        <result property="epoch"    column="epoch"    />
        <result property="batchSize"    column="batch_size"    />
        <result property="imgSize"    column="img_size"    />
        <result property="description"    column="description"    />
        <result property="createTime"    column="create_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="updateBy"    column="update_by"    />
    </resultMap>

    <sql id="selectModelVo">
        select id, model_name, epoch, batch_size, img_size, description, create_time, create_by, update_time, update_by from model
    </sql>

    <select id="selectModelList" parameterType="Model" resultMap="ModelResult">
        <include refid="selectModelVo"/>
        <where>  
            <if test="modelName != null  and modelName != ''"> and model_name like concat('%', #{modelName}, '%')</if>
            <if test="epoch != null "> and epoch = #{epoch}</if>
            <if test="batchSize != null "> and batch_size = #{batchSize}</if>
            <if test="imgSize != null "> and img_size = #{imgSize}</if>
            <if test="description != null  and description != ''"> and description = #{description}</if>
        </where>
    </select>
    
    <select id="selectModelById" parameterType="Long" resultMap="ModelResult">
        <include refid="selectModelVo"/>
        where id = #{id}
    </select>

    <insert id="insertModel" parameterType="Model" useGeneratedKeys="true" keyProperty="id">
        insert into model
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="modelName != null and modelName != ''">model_name,</if>
            <if test="epoch != null">epoch,</if>
            <if test="batchSize != null">batch_size,</if>
            <if test="imgSize != null">img_size,</if>
            <if test="description != null">description,</if>
            <if test="createTime != null">create_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="updateBy != null">update_by,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="modelName != null and modelName != ''">#{modelName},</if>
            <if test="epoch != null">#{epoch},</if>
            <if test="batchSize != null">#{batchSize},</if>
            <if test="imgSize != null">#{imgSize},</if>
            <if test="description != null">#{description},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
         </trim>
    </insert>

    <update id="updateModel" parameterType="Model">
        update model
        <trim prefix="SET" suffixOverrides=",">
            <if test="modelName != null and modelName != ''">model_name = #{modelName},</if>
            <if test="epoch != null">epoch = #{epoch},</if>
            <if test="batchSize != null">batch_size = #{batchSize},</if>
            <if test="imgSize != null">img_size = #{imgSize},</if>
            <if test="description != null">description = #{description},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteModelById" parameterType="Long">
        delete from model where id = #{id}
    </delete>

    <delete id="deleteModelByIds" parameterType="String">
        delete from model where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>